import datetime
import re
global alarm_minute,alarm_hour
class alarm():
    def __init__(self,alarm_minute=0,alarm_hour=0,alarm_am_pm=0):  
        self.alarm_minute=alarm_minute
        self.alarm_hour=alarm_hour
        self.alarm_am_pm=alarm_am_pm
        self.lg=self.label()                                        
    def alarm_setup(self):
        print("Enter the time in 12 hours format(HH:MM) ")
        self.alarm_hour = int(input("Enter HH: "))
        if (self.alarm_hour > 13 or self.alarm_hour < 1):
            print("please enter a valid time")
            exit()
        self.alarm_minute = int(input("Enter MM: "))
        if (self.alarm_minute > 61 or self.alarm_minute < 0):
            print("please enter a valid time")
            exit()
        self.alarm_am_pm = str(input("am or pm: "))
        if (self.alarm_am_pm != "am" and self.alarm_am_pm != "pm"):
            print("please enter valid details")
            exit()
        if (self.alarm_am_pm == 'pm' and self.alarm_hour>12):
            self.alarm_hour = self.alarm_hour+12
        while(1):
            if (self.alarm_hour == datetime.datetime.now().hour and
                self.alarm_minute == datetime.datetime.now().minute):
                print("wake up now")
                break
    class label:                                                 # class inside a class
        def label_show(self):
            enter_label=str(input("Enter the label"))
        
class snooze(alarm):                                             #single level inheritence
        def alarm_snooze(self):
           miss_var1 = str(input("Enter Y to snooze "))
           if (miss_var1 == "Y"):
               alarm_snooze_minute = int(input("Enter the snooze time in MM format: "))
           else:
               exit()
           self.alarm_minute = self.alarm_minute + alarm_snooze_minute
           if (alarm_snooze_minute > 31 or alarm_snooze_minute < 0):
            print("Enter a valid time: ")
            exit()
           if(self.alarm_minute > 61):
               self.alarm_hour = self.alarmhour+1
               if (self.alarm_hour > 12):
                   self.alarm_hour = 1
                   self.alarm_minute = self.alarm_minute+alarm_snooze_minute-60
           while(1):
               if (self.alarm_hour == datetime.datetime.now().hour and
                self.alarm_minute == datetime.datetime.now().minute):
                   print("wake up now")
                   print(enter_label)
                   break
class display(snooze):
    def display_output(self):
        print("Thank you for using alarm clock");
object1 = alarm()
object2 = snooze()
object3=object2.lg               
object4=display()                   
object1.alarm_setup()
object3.label_show()            
object2.alarm_snooze()
object4.display_output()
print(re.search("[a-z]+[1-9][@][a-z]+[.][a-z]+", "prabhurithesh1@gmail.com"))          

